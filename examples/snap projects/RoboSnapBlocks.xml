<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="constrain %&apos;number&apos; min %&apos;min&apos; max %&apos;max&apos;" type="predicate" category="operators"><header></header><code></code><inputs><input type="%s"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doIf"><block s="reportLessThan"><block var="number"/><block var="min"/></block><script><block s="doSetVar"><l>number</l><block var="min"/></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="number"/><block var="max"/></block><script><block s="doSetVar"><l>number</l><block var="max"/></block></script></block><block s="doReport"><block var="number"/></block></script></block-definition><block-definition s="broadcast robot %&apos;inp&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%mult%s"></input></inputs><script><block s="doDeclareVariables"><list><l>string</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>string</l><block s="reportJoinWords"><list><block var="robot"/><l>:9090/ROBOT</l></list></block></block><block s="doRepeat"><block s="reportListLength"><block var="inp"/></block><script><block s="doSetVar"><l>string</l><block s="reportJoinWords"><list><block var="string"/><l>/</l><block s="reportListItem"><l>1</l><block var="inp"/></block></list></block></block><block s="doDeleteFromList"><l>1</l><block var="inp"/></block></script></block><block s="doReport"><block s="reportURL"><block var="string"/></block></block></script></block></script></block-definition><block-definition s="%&apos;sensor port&apos; robot sensor value" type="reporter" category="sensing"><comment w="90" collapsed="false">Get the current value of the sensor (S1, S2, S3 or S4).</comment><header></header><code></code><inputs><input type="%s" readonly="true">S1<options>S1
S2
S3
S4</options></input></inputs><script><block s="doDeclareVariables"><list><l>values</l></list></block><block s="doSetVar"><l>values</l><block s="reportTextSplit"><block s="reportURL"><block s="reportJoinWords"><list><block var="robot"/><l>:9090/robot/UPDATE</l></list></block></block><l>/</l></block></block><block s="doUntil"><block s="reportLessThan"><block s="reportListLength"><block var="values"/></block><l>2</l></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="values"/></block><block var="sensor port"/></block><script><block s="doReport"><block s="reportListItem"><l>2</l><block var="values"/></block></block></script><script><block s="doDeleteFromList"><l>1</l><block var="values"/></block><block s="doDeleteFromList"><l>1</l><block var="values"/></block></script></block></script></block></script></block-definition><block-definition s="broadcast camera %&apos;inp&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%mult%s"></input></inputs><script><block s="doDeclareVariables"><list><l>string</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>string</l><block s="reportJoinWords"><list><block var="robot"/><l>:9090/ROBOSNAP</l></list></block></block><block s="doRepeat"><block s="reportListLength"><block var="inp"/></block><script><block s="doSetVar"><l>string</l><block s="reportJoinWords"><list><block var="string"/><l>/</l><block s="reportListItem"><l>1</l><block var="inp"/></block></list></block></block><block s="doDeleteFromList"><l>1</l><block var="inp"/></block></script></block></script></block><block s="doReport"><block s="reportURL"><block var="string"/></block></block></script></block-definition><block-definition s="run motor limited %&apos;method&apos; %&apos;value&apos; %&apos;motor1&apos; %&apos;motor2&apos; %&apos;motor3&apos; %&apos;motor4&apos; speed= %&apos;speed&apos; %&apos;wait&apos;" type="command" category="motion"><comment w="293" collapsed="false">This block has 3 different methods (time, rotations, position) for running one or more motors (MA, MB, MC, MD).&#xD;&#xD;&quot;time&quot; allows you to run the motors for a designated amount of time which is specified in seconds. &#xD;&quot;rotations&quot; allows you to rotate the motor for a specified number of rotations. For example, 1 will rotate the motor 1 complete rotation and 0.5 will rotate the motor halfway around.&#xD;&quot;position&quot; will allow you to move the motor to a specific position. Position is based on pulses (similar to degrees since there are 360 pulses in 1 rotation). &#xD;&#xD;The speed value ranges between -100 and 100, where negative numbers move the motor in the reverse direction. &#xD;&#xD;The last parameter &quot;wait&quot;, will wait until the condition is met before moving on to the next block. If &quot;wait&quot; is not used then the following block will start before the current block is completed.e.</comment><header></header><code></code><inputs><input type="%s" readonly="true">time<options>position
rotations
time</options></input><input type="%n"></input><input type="%s" readonly="true"><options>MA</options></input><input type="%s" readonly="true"><options>MB</options></input><input type="%txt" readonly="true"><options>MC</options></input><input type="%s" readonly="true"><options>MD</options></input><input type="%n">50</input><input type="%s" readonly="true"><options>wait</options></input></inputs><script><block s="doDeclareVariables"><list><l>str</l><l>list</l></list></block><block s="doSetVar"><l>list</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor1"/><l></l></block></block><script><block s="doAddToList"><block var="motor1"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor2"/><l></l></block></block><script><block s="doAddToList"><block var="motor2"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor3"/><l></l></block></block><script><block s="doAddToList"><block var="motor3"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor4"/><l></l></block></block><script><block s="doAddToList"><block var="motor4"/><block var="list"/></block></script></block><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="list"/></block><l>0</l></block><script><block s="bubble"><l>Select a motor </l></block></script><script><block s="doSetVar"><l>str</l><custom-block s="split list %l"><block var="list"/></custom-block></block><custom-block s="broadcast robot %mult%s"><list><l>run</l><block var="str"/><block var="speed"/><block var="method"/><block var="value"/><block var="wait"/></list></custom-block></script></block></script></block-definition><block-definition s="set sensor %&apos;sensor type&apos; to %&apos;sensor port&apos;" type="command" category="sensing"><comment w="159" collapsed="false">Used to assign which sensors are connected to which sensor ports.  Must be set before getting the sensor values.</comment><header></header><code></code><inputs><input type="%s" readonly="true">TOUCH<options>COLOR
INFRARED
LIGHT
SOUND
TOUCH
ULTRASONIC</options></input><input type="%s" readonly="true">S1<options>S1
S2
S3
S4</options></input></inputs><script><custom-block s="broadcast robot %mult%s"><list><block var="sensor port"/><block var="sensor type"/></list></custom-block></script></block-definition><block-definition s="stop motor %&apos;motor1&apos; %&apos;motor2&apos; %&apos;motor3&apos; %&apos;motor4&apos;" type="command" category="motion"><comment w="253" collapsed="false">Block is used to stop a motor (MA, MB, MC and/or MD) that is running &quot;forever&quot;</comment><header></header><code></code><inputs><input type="%s" readonly="true"><options>MA</options></input><input type="%s" readonly="true"><options>MB</options></input><input type="%txt" readonly="true"><options>MC</options></input><input type="%s" readonly="true"><options>MD</options></input></inputs><script><block s="doDeclareVariables"><list><l>str</l><l>list</l></list></block><block s="doSetVar"><l>list</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor1"/><l></l></block></block><script><block s="doAddToList"><block var="motor1"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor2"/><l></l></block></block><script><block s="doAddToList"><block var="motor2"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor3"/><l></l></block></block><script><block s="doAddToList"><block var="motor3"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor4"/><l></l></block></block><script><block s="doAddToList"><block var="motor4"/><block var="list"/></block></script></block><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="list"/></block><l>0</l></block><script><block s="bubble"><l>Select a motor to stop</l></block></script><script><block s="doSetVar"><l>str</l><custom-block s="split list %l"><block var="list"/></custom-block></block><custom-block s="broadcast robot %mult%s"><list><l>stop</l><block var="str"/></list></custom-block></script></block></script></block-definition><block-definition s="take a picture" type="command" category="looks"><comment w="222" collapsed="false">Used to take a 300x200 snapshot which is saved to the image directory specified (or the default of &quot;/&quot;). The filenames will be called img_*.png (or &quot;img&quot; will be replaced by the value set by &quot;set image filename&quot;) * is a unique number starting with 0.</comment><header></header><code></code><inputs></inputs><script><custom-block s="broadcast camera %mult%s"><list><l>SNAP</l></list></custom-block></script></block-definition><block-definition s="set image directory to %&apos;imagedir&apos;" type="command" category="looks"><comment w="160" collapsed="false">used to set the directory on the robot to store any captured images. This is an optional command. If not set, the default directory is the top level directory &quot;/&quot;. </comment><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="imagedir"/><l></l></block><script><block s="bubble"><l>Missing image directory name</l></block></script><script><custom-block s="broadcast camera %mult%s"><list><l>IMAGEDIR</l><block var="imagedir"/></list></custom-block></script></block></script></block-definition><block-definition s="set image filename to %&apos;prefix&apos;" type="command" category="looks"><comment w="176.00000099999988" collapsed="false">Used to set the prefix of the captured images. This is an optional command. If not set, the default prefix is &quot;img&quot;.</comment><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="prefix"/><l></l></block><script><block s="bubble"><l>Missing image filename</l></block></script><script><custom-block s="broadcast camera %mult%s"><list><l>FILE_PREFIX</l><block var="prefix"/></list></custom-block></script></block></script></block-definition><block-definition s="motor %&apos;motor&apos; position" type="reporter" category="motion"><comment w="302" collapsed="false">This is a reporter block which return the current position of a specified motor (MA, MB, MC or MD).</comment><header></header><code></code><inputs><input type="%s" readonly="true">MA<options>MA
MB
MC
MD</options></input></inputs><script><block s="doDeclareVariables"><list><l>values</l></list></block><block s="doSetVar"><l>values</l><block s="reportTextSplit"><block s="reportURL"><block s="reportJoinWords"><list><block var="robot"/><l>:9090/robot/GET/</l><block var="motor"/><l>/position</l></list></block></block><l>/</l></block></block><block s="doUntil"><block s="reportLessThan"><block s="reportListLength"><block var="values"/></block><l>2</l></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="values"/></block><block s="reportJoinWords"><list><block var="motor"/><l>_POSITION</l></list></block></block><script><block s="doReport"><block s="reportListItem"><l>2</l><block var="values"/></block></block></script><script><block s="doDeleteFromList"><l>1</l><block var="values"/></block><block s="doDeleteFromList"><l>1</l><block var="values"/></block></script></block></script></block></script></block-definition><block-definition s="reset motor %&apos;motor&apos; position" type="command" category="motion"><comment w="214" collapsed="false">This block will reset the value of the current motor position of specified motor (MA, MB, MC or MD) to 0.</comment><header></header><code></code><inputs><input type="%s" readonly="true">MA<options>MA
MB
MC
MD</options></input></inputs><script><block s="doReport"><block s="reportURL"><block s="reportJoinWords"><list><block var="robot"/><l>:9090/robot/RESET/</l><block var="motor"/></list></block></block></block></script></block-definition><block-definition s="split list %&apos;list&apos;" type="reporter" category="variables"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>string</l></list></block><block s="doIf"><block s="reportGreaterThan"><block s="reportListLength"><block var="list"/></block><l>0</l></block><script><block s="doSetVar"><l>string</l><block s="reportListItem"><l>1</l><block var="list"/></block></block><block s="doDeleteFromList"><l>1</l><block var="list"/></block></script></block><block s="doRepeat"><block s="reportListLength"><block var="list"/></block><script><block s="doSetVar"><l>string</l><block s="reportJoinWords"><list><block var="string"/><l>/</l><block s="reportListItem"><l>1</l><block var="list"/></block></list></block></block><block s="doDeleteFromList"><l>1</l><block var="list"/></block></script></block><block s="doReport"><block var="string"/></block></script></block-definition><block-definition s="camera get object %&apos;color_in&apos; %&apos;shape_in&apos; %&apos;x&apos; %&apos;y&apos; %&apos;w&apos; %&apos;h&apos; %&apos;color&apos; %&apos;shape&apos;" type="command" category="sensing"><comment w="228" collapsed="false">Used to get the largest object found. If color and/or shape are provided then the largest object of that type is returned. The values: x, y, w, h, color and shape are returned. &#xD;x,y is the center of the object and w is the width and h is the height of the bounding box around the object. The coordinates are based on the snap coordinate system (-240 to 240 in X and -180 to 180 in Y). &#xD;Color and shape are the names of color and shape found - or UNKNOWN if unable to detect.</comment><header></header><code></code><inputs><input type="%s" readonly="true">ANY<options>ANY
RED
ORANGE
YELLOW
GREEN
BLUE
PURPLE
PINK</options></input><input type="%s" readonly="true">ANY<options>ANY
CIRCLE
TRIANGLE
RECTANGLE
PENTAGON
HEXAGON
HEPTAGON
OCTAGON</options></input><input type="%upvar"></input><input type="%upvar"></input><input type="%upvar"></input><input type="%upvar"></input><input type="%upvar"></input><input type="%upvar"></input></inputs><script><block s="doDeclareVariables"><list><l>string</l><l>values</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>string</l><block s="reportURL"><block s="reportJoinWords"><list><block var="robot"/><l>:9090/ROBOSNAP/GETSHAPE/</l><block var="color_in"/><l>/</l><block var="shape_in"/></list></block></block></block><block s="doSetVar"><l>values</l><block s="reportTextSplit"><block var="string"/><l>/</l></block></block><block s="doIfElse"><block s="reportAnd"><block s="reportAnd"><block s="reportEquals"><block s="reportListLength"><block var="values"/></block><l>13</l></block><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>2</l><block var="values"/></block><l>X</l></block><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>4</l><block var="values"/></block><l>Y</l></block><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>6</l><block var="values"/></block><l>W</l></block><block s="reportEquals"><block s="reportListItem"><l>8</l><block var="values"/></block><l>H</l></block></block></block></block></block><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>10</l><block var="values"/></block><l>COLOR</l></block><block s="reportEquals"><block s="reportListItem"><l>12</l><block var="values"/></block><l>SHAPE</l></block></block></block><script><block s="doSetVar"><l>x</l><block s="reportListItem"><l>3</l><block var="values"/></block></block><block s="doSetVar"><l>y</l><block s="reportListItem"><l>5</l><block var="values"/></block></block><block s="doSetVar"><l>w</l><block s="reportListItem"><l>7</l><block var="values"/></block></block><block s="doSetVar"><l>h</l><block s="reportListItem"><l>9</l><block var="values"/></block></block><block s="doSetVar"><l>color</l><block s="reportListItem"><l>11</l><block var="values"/></block></block><block s="doSetVar"><l>shape</l><block s="reportListItem"><l>13</l><block var="values"/></block></block></script><script><block s="bubble"><l>Error parsing camera block</l></block></script></block></script></block></script></block-definition><block-definition s="take a picture with %&apos;N&apos; %&apos;color&apos; %&apos;shape&apos; objects" type="command" category="looks"><comment w="360" collapsed="false">Used to take a 300x200 snapshot that includes a box around the N shapes detected of the specified color and shape.  The name of the color and shape is written below the box. The largest shape will use a blue box and the smaller boxes will be white. &#xD;&#xD;This command has 3 arguments N, color and shape. N is the number of boxes to display. The default is 1. If the color is specified then only objects of that color will be selected. If shape is specified  then only objects of that shape will be selected. &#xD;&#xD;As with &quot;take a picture&quot;, the images are saved to the image directory specified (or the default of &quot;/&quot;) . The filenames will be called img_*.png (or &quot;img&quot; will be replaced by the value set my &quot;set image filename&quot;). * is a unique number starting with 0..</comment><header></header><code></code><inputs><input type="%n">1</input><input type="%s" readonly="true">ANY<options>ANY
RED
ORANGE
YELLOW
GREEN
BLUE
PURPLE
PINK</options></input><input type="%s" readonly="true">ANY<options>ANY
CIRCLE
TRIANGLE
RECTANGLE
PENTAGON
HEXAGON
HEPTAGON
OCTAGON</options></input></inputs><script><custom-block s="broadcast camera %mult%s"><list><l>SNAPSHAPE</l><block var="N"/><block var="color"/><block var="shape"/></list></custom-block></script></block-definition><block-definition s="run motor forever %&apos;motor1&apos; %&apos;motor2&apos; %&apos;motor3&apos; %&apos;motor4&apos; speed= %&apos;speed1&apos; %&apos;speed2&apos; %&apos;speed3&apos; %&apos;speed4&apos;" type="command" category="motion"><comment w="236" collapsed="false">The &quot;run motor forever&quot; block allows you to move one or more motors (MA, MB, MC, MD) given a set of speeds. The speed values range between -100 and 100, where negative numbers move the motor in the reverse direction. If you specify less speeds than the number of motors, then the last speed will be used for the remaining motors.</comment><header></header><code></code><inputs><input type="%s" readonly="true"><options>MA</options></input><input type="%s" readonly="true"><options>MB</options></input><input type="%s" readonly="true"><options>MC</options></input><input type="%s" readonly="true"><options>MD</options></input><input type="%n">50</input><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doDeclareVariables"><list><l>str</l><l>list</l><l>str2</l><l>speed_list</l></list></block><block s="doSetVar"><l>list</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>speed_list</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor1"/><l></l></block></block><script><block s="doAddToList"><block var="motor1"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor2"/><l></l></block></block><script><block s="doAddToList"><block var="motor2"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor3"/><l></l></block></block><script><block s="doAddToList"><block var="motor3"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="motor4"/><l></l></block></block><script><block s="doAddToList"><block var="motor4"/><block var="list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="speed1"/><l>0</l></block></block><script><block s="doAddToList"><block var="speed1"/><block var="speed_list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="speed2"/><l>0</l></block></block><script><block s="doAddToList"><block var="speed2"/><block var="speed_list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="speed3"/><l>0</l></block></block><script><block s="doAddToList"><block var="speed3"/><block var="speed_list"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="speed4"/><l>0</l></block></block><script><block s="doAddToList"><block var="speed4"/><block var="speed_list"/></block></script></block><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="list"/></block><l>0</l></block><script><block s="bubble"><l>Select a motor </l></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="speed_list"/></block><l>0</l></block><script><block s="bubble"><l>At least 1 speed required </l></block></script><script><block s="doUntil"><block s="reportNot"><block s="reportLessThan"><block s="reportListLength"><block var="speed_list"/></block><block s="reportListLength"><block var="list"/></block></block></block><script><block s="doAddToList"><block s="reportListItem"><l><option>last</option></l><block var="speed_list"/></block><block var="speed_list"/></block></script></block><block s="doSetVar"><l>str</l><custom-block s="split list %l"><block var="list"/></custom-block></block><block s="doSetVar"><l>str2</l><custom-block s="split list %l"><block var="speed_list"/></custom-block></block><custom-block s="broadcast robot %mult%s"><list><l>forever</l><block var="str"/><block var="str2"/></list></custom-block></script></block></script></block></script></block-definition><block-definition s="Color %&apos;color&apos;" type="reporter" category="variables"><header></header><code></code><inputs><input type="%s" readonly="true"><options>ANY
RED
ORANGE
YELLOW
GREEN
BLUE
PURPLE
PINK</options></input></inputs><script><block s="doReport"><block var="color"/></block></script></block-definition><block-definition s="Shape %&apos;Shape&apos;" type="reporter" category="variables"><header></header><code></code><inputs><input type="%s" readonly="true"><options>ANY
CIRCLE
TRIANGLE
RECTANGLE
PENTAGON
HEXAGON
HEPTAGON
OCTAGON</options></input></inputs><script><block s="doReport"><block var="Shape"/></block></script></block-definition><block-definition s="show last picture" type="command" category="looks"><comment w="231" collapsed="false"> This will draw the last picture you have taken that is stored in  the directory set with&quot;set image directory&quot; and prefix set with &quot;set image filename&quot;</comment><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>image</l></list></block><block s="doSetVar"><l>image</l><block s="reportURL"><block s="reportJoinWords"><list><block var="robot"/><l>:9090/ROBOSNAP/GETIMAGE</l></list></block></block></block><block s="clear"></block><block s="doRun"><block s="reportJSFunction"><list><l>image</l></list><l>var sprite = this,&#xD;			stage = sprite.parentThatIsA(StageMorph),&#xD;			context = stage.penTrails().getContext(&apos;2d&apos;),&#xD;        	isWarped = sprite.isWarped,&#xD;			img = new Image(),&#xD;			left =0,&#xD;			top = 0;&#xD;&#xD;		if (isWarped) {&#xD;			sprite.endWarp();&#xD;		}&#xD;&#xD;		//img.src = &apos;http://snap.berkeley.edu/half-snapshot.png&apos;;&#xD;		img.src = &apos;data:image/png;base64,&apos; + image&#xD;  context.save();&#xD;		context.scale(1 / stage.scale, 1 / stage.scale);&#xD;		context.translate(left, top);&#xD;		context.rotate((sprite.heading - 90) * Math.PI/180);&#xD;		context.drawImage(&#xD;        	img,&#xD;			0,&#xD;			0&#xD;	    );&#xD;		context.restore();&#xD;		stage.changed();&#xD;		if (isWarped) {&#xD;				sprite.startWarp();&#xD;		}</l></block><list><block var="image"/></list></block></script></block-definition><block-definition s="Beep robot %&apos;length&apos; ms %&apos;N&apos; times" type="command" category="sound"><header></header><code></code><inputs><input type="%n">180</input><input type="%n">1</input></inputs><script><custom-block s="broadcast robot %mult%s"><list><l>beep</l><block var="length"/><block var="N"/></list></custom-block></script></block-definition></blocks>